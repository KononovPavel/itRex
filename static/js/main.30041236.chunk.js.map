{"version":3,"sources":["components/users/usersList.module.css","components/Header/Header.module.css","state/reducers/userReducer.ts","API/userAPI.ts","components/profile/userProfile.tsx","components/users/usersList.tsx","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","state/index.ts","index.tsx"],"names":["module","exports","ActionTypes","userAPI","axios","get","then","response","data","USERS_STATE","users","currentUser","currentName","setUsers","type","SET_USERS_BY_API","payload","getCurrentUser","user","dispatch","SET_CURRENT_USER","setCurrentUser","getSortedUsers","value","action","SET_SORT_USERS","getUsersSearching","SEARCH_BY_NAME","console","log","getCurrentName","SET_CURRENT_NAME","name","setCurrentName","UserProfile","active","setActive","useSelector","state","userReducer","className","onClick","e","stopPropagation","firstName","lastName","description","adress","streetAddress","city","zip","UsersList","useDispatch","useState","modalActive","setModalActive","useEffect","a","setTimeout","onClickHandler","length","styles","userBlock","map","userItem","id","email","phone","Header","header","item","App","style","height","width","marginTop","placeholder","onChange","currentTarget","setInterval","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","flat","sort","b","toLowerCase","filter","includes","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30041236.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItem\":\"usersList_userItem__3OJVV\",\"userBlock\":\"usersList_userBlock__2kP5l\",\"item\":\"usersList_item__YKag0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3lb77\"};","import {Dispatch} from \"react\";\r\nimport {userAPI} from \"../../API/userAPI\";\r\n\r\nexport enum ActionTypes {\r\n    SET_USERS_BY_API = 'SET_USERS_BY_API',\r\n    SET_CURRENT_USER = 'SET_CURRENT_USER',\r\n    SET_SORT_USERS = 'SET_SORT_USERS',\r\n    SEARCH_BY_NAME = 'SEARCH_BY_NAME',\r\n    SET_CURRENT_NAME  = 'SET_CURRENT_NAME'\r\n}\r\n\r\n\r\ntype addressType = {\r\n    streetAddress: string,\r\n    city: string,\r\n    state: string,\r\n    zip: string,\r\n}\r\n\r\n export interface user {\r\n    id: number,\r\n    firstName: string,\r\n    lastName: string,\r\n    email: string,\r\n    phone: string,\r\n    adress: addressType,\r\n    description: string\r\n}\r\n\r\ntype usersState = {\r\n    users: user[],\r\n    currentUser: user,\r\n    currentName:string\r\n}\r\nlet USERS_STATE: usersState = {\r\n    users: [],\r\n    currentUser: {} as user,\r\n    currentName:''\r\n}\r\n\r\ntype setUsers = {\r\n    type: ActionTypes.SET_USERS_BY_API,\r\n    payload: user[]\r\n}\r\ntype setCurrentUser = {\r\n    type: ActionTypes.SET_CURRENT_USER,\r\n    payload: user\r\n}\r\ntype sortUsers = {\r\n    type:ActionTypes.SET_SORT_USERS,\r\n    payload:string | null\r\n}\r\ntype searchByName = {\r\n    type:ActionTypes.SEARCH_BY_NAME,\r\n}\r\ntype setCurrentName = {\r\n    type:ActionTypes.SET_CURRENT_NAME,\r\n    name:string\r\n}\r\n\r\ntype action = setUsers | setCurrentUser | sortUsers | searchByName | setCurrentName\r\n\r\n\r\nexport const userReducer = (state: usersState = USERS_STATE, action: action): usersState => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.SET_USERS_BY_API: {\r\n            return {...state, users: [...state.users, action.payload].flat(2)}\r\n        }\r\n        case ActionTypes.SET_CURRENT_USER: {\r\n            return {...state, currentUser: action.payload}\r\n        }\r\n        case ActionTypes.SET_SORT_USERS:{\r\n            if(action.payload === '') return {...state, users:[...state.users]}\r\n            if(action.payload === 'firstName'){\r\n                return {\r\n                    ...state,\r\n                    users:[...state.users.sort((a,b)=> a.firstName.toLowerCase() > b.firstName.toLowerCase() ? 1:-1)]\r\n                }\r\n            }\r\n            if(action.payload === 'lastName'){\r\n                return {\r\n                    ...state,\r\n                    users:[...state.users.sort((a,b)=> a.lastName.toLowerCase() > b.lastName.toLowerCase() ? 1:-1)]\r\n                }\r\n            }\r\n            if(action.payload === 'email'){\r\n                return {\r\n                    ...state,\r\n                    users:[...state.users.sort((a,b)=> a.email.toLowerCase() > b.email.toLowerCase() ? 1:-1)]\r\n                }\r\n            }\r\n            if(action.payload === 'phone'){\r\n                return {\r\n                    ...state,\r\n                    users:[...state.users.sort((a,b)=> a.phone.toLowerCase() > b.phone.toLowerCase() ? 1:-1)]\r\n                }\r\n            }\r\n            if(action.payload === 'id'){\r\n                return {\r\n                    ...state,\r\n                    users:[...state.users.sort((a,b)=> a.id > b.id ? 1 : -1)]\r\n                }\r\n            }\r\n            if(action.payload ==='state') {\r\n                return {\r\n                    ...state,\r\n                    users:[...state.users.sort((a,b)=> a.adress.state > b.adress.state ? 1 : -1)]\r\n                }\r\n            }\r\n            return {...state}\r\n        }\r\n        case ActionTypes.SEARCH_BY_NAME:{\r\n            if(state.currentName === ''){\r\n                return {...state, users:[...state.users]}\r\n            }\r\n            return {\r\n                ...state,\r\n                users:[...state.users.filter(user => user.firstName.toLowerCase().includes(state.currentName.toLowerCase()))]\r\n            }\r\n        }\r\n        case ActionTypes.SET_CURRENT_NAME:{\r\n            return {...state, currentName:action.name}\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nconst setUsers = (users: user[]): setUsers => ({type: ActionTypes.SET_USERS_BY_API, payload: users})\r\nconst setCurrentUser = (user: user): setCurrentUser => ({type: ActionTypes.SET_CURRENT_USER, payload: user})\r\nconst setSortUsers = (action:string | null):sortUsers=>({type:ActionTypes.SET_SORT_USERS,payload:action})\r\nconst setSearchByName = ():searchByName=>({type:ActionTypes.SEARCH_BY_NAME})\r\nconst setCurrentName= (value:string):setCurrentName=>({type:ActionTypes.SET_CURRENT_NAME,name:value})\r\n\r\n\r\nexport const getUsers = () => async (dispatch: Dispatch<setUsers>) => {\r\n    dispatch(setUsers(await userAPI.getUsers()))\r\n}\r\nexport const getCurrentUser = (user: user) => (dispatch: Dispatch<setCurrentUser>) => {\r\n    dispatch(setCurrentUser(user))\r\n}\r\nexport const getSortedUsers = (value:string | null)=>(dispatch:Dispatch<sortUsers>)=>{\r\n    dispatch(setSortUsers(value))\r\n}\r\n\r\nexport const getUsersSearching = ()=> (dispatch :Dispatch<searchByName>)=>{\r\n        dispatch(setSearchByName())\r\n    console.log('dispatch searching')\r\n}\r\nexport const getCurrentName = (value:string)=>(dispatch :Dispatch<setCurrentName>)=>{\r\n    dispatch(setCurrentName(value))\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\n\r\nexport const userAPI = {\r\n    async getUsers(){\r\n        const response = await axios.get('http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&adress=%7BaddressObject%7D&description=%7Blorem%7C32',{\r\n\r\n        }).then(response=> response.data)\r\n        return response\r\n    },\r\n}\r\n","import React from 'react';\r\nimport './userProfile.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../state\";\r\nimport {user} from \"../../state/reducers/userReducer\";\r\n\r\ninterface Props {\r\n    active: boolean,\r\n    setActive: (active: boolean) => void\r\n}\r\n\r\nconst UserProfile: React.FC<Props> = ({active, setActive}) => {\r\n\r\n    const currentUser = useSelector<AppStateType, user>(state => state.userReducer.currentUser)\r\n\r\n    return (\r\n        <div className={active ? 'modal active' : 'modal'} onClick={() => setActive(false)}>\r\n            <div className={'modal_content'} onClick={e => e.stopPropagation()}>\r\n                    {\r\n                        currentUser && <div className={'info'}>\r\n                            <p>Profile info:</p>\r\n                            <p>Selected profile : {currentUser.firstName}{currentUser.lastName}</p>\r\n                            <p>Description : {currentUser.description}</p>\r\n                            <p>Address : { currentUser.adress && currentUser.adress.streetAddress}</p>\r\n                            <p>City : { currentUser.adress && currentUser.adress.city}</p>\r\n                            <p>State: {currentUser.adress && currentUser.adress.state}</p>\r\n                            <p>Index : { currentUser.adress && currentUser.adress.zip && currentUser.adress.zip}</p>\r\n                        </div>\r\n                    }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../state\";\r\nimport {getCurrentUser, getSortedUsers, getUsers, user} from \"../../state/reducers/userReducer\";\r\nimport styles from './usersList.module.css'\r\nimport UserProfile from \"../profile/userProfile\";\r\n\r\nconst UsersList:React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const[modalActive, setModalActive] = useState(false)\r\n    useEffect(() => {\r\n        dispatch(getUsers())\r\n        setTimeout(()=>dispatch(getSortedUsers('id')),500)\r\n    }, [dispatch])\r\n    const users = useSelector<AppStateType, user[]>(state => state.userReducer.users);\r\n\r\n    const onClickHandler = (user:user) => {\r\n        dispatch(getCurrentUser(user))\r\n        setModalActive(true)\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n            {\r\n                !users.length\r\n                    ? <div>Загрузка пользователей...</div>\r\n                    : <div className={styles.userBlock}>\r\n                        {users.map((user=> <div key={user.id} className={styles.userItem} >\r\n                            <div onClick={()=>onClickHandler(user)}>{user.id}</div>\r\n                            <div onClick={()=>onClickHandler(user)}>{user.firstName}</div>\r\n                            <div onClick={()=>onClickHandler(user)}>{user.lastName}</div>\r\n                            <div onClick={()=>onClickHandler(user)}>{user.email}</div>\r\n                            <div onClick={()=>onClickHandler(user)}>{user.phone}</div>\r\n                            <div onClick={()=>onClickHandler(user)}>{user.adress? user.adress.state : 'No info'}</div>\r\n                        </div>))}\r\n                    </div>\r\n            }\r\n            <UserProfile active={modalActive} setActive={setModalActive}/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, {useState} from 'react';\r\nimport styles from './Header.module.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getSortedUsers} from \"../../state/reducers/userReducer\";\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={styles.header}>\r\n            <div onClick={()=>dispatch(getSortedUsers('id'))} className={styles.item}>id</div>\r\n            <div onClick={()=>dispatch(getSortedUsers('firstName'))} className={styles.item}>First name</div>\r\n            <div onClick={()=>dispatch(getSortedUsers('lastName'))} className={styles.item}>LastName</div>\r\n            <div onClick={()=>dispatch(getSortedUsers('email'))} className={styles.item}>Email</div>\r\n            <div onClick={()=>dispatch(getSortedUsers('phone'))} className={styles.item}>Phone</div>\r\n            <div onClick={()=>dispatch(getSortedUsers('state'))} className={styles.item}>State</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport './App.css';\nimport UsersList from \"./components/users/usersList\";\nimport Header from \"./components/Header/Header\";\nimport {useDispatch} from \"react-redux\";\n\nimport {getCurrentName, getUsersSearching} from \"./state/reducers/userReducer\";\n\nfunction App() {\n\n    //&#60; -- <\n    //&#62; -- >\n    const dispatch = useDispatch()\n    return (\n        <div className={'wrapper'}>\n            <div className={'container'}>\n                <Header/>\n                <input  style={{height:'30px', width:'200px', marginTop:'20px'}} type=\"text\" placeholder={'search by name'} onChange={ e => {\n                    dispatch(getCurrentName(e.currentTarget.value))\n                    setInterval(()=>{  dispatch(getUsersSearching())}, 500)\n                    e.preventDefault();\n                    e.stopPropagation();\n                    console.log(e.currentTarget.value)\n                }} />\n                <UsersList/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport {userReducer} from \"./reducers/userReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    userReducer\r\n})\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n// @ts-ignore\r\nwindow.store = store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./state\";\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}